<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Apple on MetaBates.com</title>
    <link>/tags/apple/index.xml</link>
    <description>Recent content in Apple on MetaBates.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>mark&#43;blog@markbates.com (Mark Bates)</managingEditor>
    <webMaster>mark&#43;blog@markbates.com (Mark Bates)</webMaster>
    <copyright>(c) 2016 Mark Bates.</copyright>
    <atom:link href="/tags/apple/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>APN on Rails 0.3.0 Released</title>
      <link>/2009/07/31/apn-on-rails-0-3-0-released/</link>
      <pubDate>Fri, 31 Jul 2009 00:00:00 +0000</pubDate>
      <author>mark&#43;blog@markbates.com (Mark Bates)</author>
      <guid>/2009/07/31/apn-on-rails-0-3-0-released/</guid>
      <description>&lt;p&gt;The latest version of Apple Push Notifications on Rails (APN on Rails) has been released. This release brings a few bug fixes, a new migration, and Feedback processing.&lt;/p&gt;

&lt;p&gt;Installing/upgrading is easy:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ sudo gem install apn_on_rails
$ ruby script/generate apn_migrations
$ rake db:migrate
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s important to always run the migrations generator after each update to get the latest database schema needed for the the gem.&lt;/p&gt;

&lt;p&gt;To use the new Feedback integration you have to first make sure that you update the new &lt;code&gt;last_registered_at&lt;/code&gt; column when your iPhone application calls home. This column is checked against the timestamp Apple returns with the device token. If the &lt;code&gt;last_registered_at&lt;/code&gt; is older than Apple&amp;rsquo;s date then the device is deleted, otherwise the Feedback is ignored.&lt;/p&gt;

&lt;p&gt;To get and process the list of devices from Apple&amp;rsquo;s Feedback service just run the following Rake task:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ rake apn:feedback:process&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Apple Push Notifications on Rails</title>
      <link>/2009/07/24/apple-push-notifications-on-rails/</link>
      <pubDate>Fri, 24 Jul 2009 00:00:00 +0000</pubDate>
      <author>mark&#43;blog@markbates.com (Mark Bates)</author>
      <guid>/2009/07/24/apple-push-notifications-on-rails/</guid>
      <description>&lt;p&gt;The other night I submitted a new iPhone application to the Apple Store. The app, which I&amp;rsquo;ll speak about when, and if it gets approved, uses the new Apple Push Notification service available in iPhone OS 3.0. On the server side I have a Rails application that I am using to send the notifications to Apple. The problem I ran into was how.&lt;/p&gt;

&lt;p&gt;Enter the APN on Rails gem. While searching I found one plugin for Rails that mostly worked for me, Sam Soffes&amp;rsquo; apple_push_notification plugin. It was a great place to start, but I found that there were things that didn&amp;rsquo;t suite me. For starters, not having any tests is always a big turn off for me when it comes to any code. I also didn&amp;rsquo;t like that you didn&amp;rsquo;t need to save a notification in order to send it. That means you don&amp;rsquo;t have a record of what was sent and when. I also wanted to have devices stored separately from the notification. Finally, I wanted to be able to easily configure the plugin. Sam&amp;rsquo;s was using constants that would need to be changed when it hit production.&lt;/p&gt;

&lt;p&gt;So, with all that said and done I took Sam&amp;rsquo;s great work, ripped it apart, and put it back together again, this time in gem form instead of a plugin, and here it is.&lt;/p&gt;

&lt;p&gt;There are a few migrations, a few models, and a few Rake tasks, but here is the basic idea of how it works:&lt;/p&gt;

&lt;script src=&#34;http://gist.github.com/154516.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;To get a better understanding of exactly how it works, and what it does, I highly recommend reading the &lt;a href=&#34;http://apnonrails.metabates.com/&#34;&gt;RDOC&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There are a few things I still would like to add, for example, a controller to do CRUD for devices so iPhones can register with the Rails app. I&amp;rsquo;d also like to add a task that talks to Apple and finds out which devices are no longer accepting messages so they can be removed.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;d like to contribute, please feel free and for the project on GitHub:
&lt;a href=&#34;http://github.com/markbates/apn_on_rails/tree&#34;&gt;http://github.com/markbates/apn_on_rails/tree&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Again, a special thanks to Fabien Penso and Sam Soffes for their initial work on this project.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>